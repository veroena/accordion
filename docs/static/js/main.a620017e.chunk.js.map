{"version":3,"sources":["components/Detail.jsx","components/Accordion.jsx","components/Loading.jsx","components/App.jsx","data/index.jsx","store/index.jsx","index.js"],"names":["Detail","props","service","index","idOpen","className","filter","item","Free","map","detail","key","htmlFor","type","id","name","Name","Accordion","services","handleAccordion","onClick","ServiceCategory","width","height","xmlns","viewBox","d","Loading","connect","state","dispatch","toggleAccordion","payload","storeData","data","useEffect","fetch","then","response","json","categories","value","newSet","Set","forEach","element","length","event","elementValue","currentTarget","initialState","store","createStore","action","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a620017e.chunk.js","sourcesContent":["import React from 'react';\n\nexport const Detail = (props) => {\n  const { service, index, idOpen } = props;\n  return (\n      <div className={`details ${idOpen === index ? \"visible\" : \"hidden\"}`}>\n        <div className=\"detail__list--container free\">\n          <h3>Free</h3>\n          <ul className=\"detail__list\">\n            {service.filter(item => item = item.Free)\n              .map((detail, index) => \n                <li className=\"detail__list--item\" key={index}>\n                  <label htmlFor=\"detail-free\">\n                    <input type=\"checkbox\" id=\"detail-free\" name=\"detail-free\" />\n                    {detail.Name}\n                  </label>\n                </li>\n              )\n            }\n          </ul>\n        </div>\n        <div className=\"detail__list--container extra\">\n          <h3>Extra</h3>\n          <ul className=\"detail__list\">\n            {service.filter(item => item = !item.Free)\n              .map((detail, index) => \n                <li className=\"detail__list--item\" key={index}>\n                  <label htmlFor=\"detail-free\">\n                    <input type=\"checkbox\" id=\"detail-free\" name=\"detail-free\" />\n                    {detail.Name}\n                  </label>\n                </li>\n              )\n              }\n          </ul>\n        </div>\n      </div>\n  );\n};","import React from 'react';\nimport { Detail } from './Detail';\n\nexport const Accordion = (props) => {\n  const { services, idOpen, handleAccordion } = props;\n  return (\n    <ul className=\"accordion\">\n        {services.map((service, index) =>\n          <li className=\"accordion__list--item\" key={index}>\n            <div className=\"accordion__list--title\"  id={index} onClick={handleAccordion}>\n              <h2>\n                {service.map(item => item.ServiceCategory.Name)[0]}\n              </h2>\n              <svg width=\"24\" height=\"24\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" className={`accordion__list--chevron ${idOpen === index ? \"open\" : \"close\"}`}>\n                {idOpen === index ? <path d=\"M0 9h24v6h-24z\"/> : <path d=\"M24 9h-9v-9h-6v9h-9v6h9v9h6v-9h9z\"/>}\n              </svg>\n            </div>\n            <Detail service={service} index={index} idOpen={idOpen} />\n          </li>  \n        )}\n      </ul>\n  );\n};\n","import React from 'react';\n\nexport const Loading = () => {\n  return (\n      <div className=\"loading\">\n        <p>Loading</p>\n        <div className=\"animation\">\n          <div className=\"circle\"></div>\n          <div className=\"circle\"></div>\n          <div className=\"circle\"></div>\n        </div>\n      </div>\n  );\n};\n","import React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport './App.scss';\nimport { ENDPOINT } from './../data';\nimport { Accordion } from './Accordion';\nimport { Loading } from './Loading';\n\nconst App = (props) => {\n  const { storeData, toggleAccordion, idOpen, services } = props;\n\n  useEffect(() => {\n    fetch(ENDPOINT)\n      .then(response => response.json())\n      .then(data => {\n      // getting the categories' names\n      const categories = data.value.map(item => item.ServiceCategory.Name );\n      const newSet = new Set(categories);\n      const filteredCategories = [...newSet];\n\n      // filter data and classify them into categories for storing them in state\n      filteredCategories.forEach(item => {\n        const services = data.value.filter(element => element.ServiceCategory.Name === item);\n        storeData(services);\n      })\n    })\n  }, [storeData]);\n  \n  const handleAccordion = (event) => {\n    const elementValue = +event.currentTarget.id;\n    if (elementValue === idOpen) {\n      toggleAccordion(\"\");\n    } else {\n      toggleAccordion(elementValue);\n    }\n  }\n\n  return (\n    <div className=\"App\">\n      <h1 className=\"app-title\">Accordion</h1>\n      {services.length === 0 ? \n        <Loading />\n      :\n      <Accordion services={services} idOpen={idOpen} handleAccordion={handleAccordion} />\n      }\n    </div>\n  );\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    idOpen: state.idOpen,\n    services: state.services\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    toggleAccordion: (idOpen) => {\n      dispatch({\n        type: \"TOGGLE_ACCORDION\",\n        payload: idOpen\n      })\n    },\n    storeData: (data) => {\n      dispatch({\n        type: \"STORE_DATA\",\n        payload: data\n      })\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","export const ENDPOINT = 'https://debug-api.fastpayhotels.net/DataService/EntityService.svc/ServiceType?$filter=(IdServiceCategory%20eq%202)%20or%20(IdServiceCategory%20eq%203)%20or%20(IdServiceCategory%20eq%204)&$format=json&$expand=ServiceCategory&$select=Id,Free,Caption,Name,ServiceCategory/Id,ServiceCategory/Name,ServiceCategory/Caption';\n","import { createStore } from 'redux';\n\nconst initialState = {\n  idOpen: 0,\n  services: [],\n}\n\nexport const reducer = ( state = initialState, action ) =>  {\n  switch (action.type) {\n    case \"STORE_DATA\":\n      state = {\n        ...state,\n        services: [...state.services, action.payload]\n      }\n      break;\n    case \"TOGGLE_ACCORDION\":\n      state= {\n        ...state,\n        idOpen: action.payload\n      }\n      break;\n    default:\n      break;\n  }\n  return state;\n};\n\nexport const store = createStore(reducer);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App.jsx';\nimport { Provider } from 'react-redux';\nimport { store } from './store';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}